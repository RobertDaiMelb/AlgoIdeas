def get_z_array(pat, pat_len, hm_dist):
    z_array = [0] * len(pat)
    l = 0
    r = 0
    for k in range(1, len(pat)):
        hm = 0
        if k > r:
            l = r = k
            while r < len(pat):
                if pat[r] == pat[r - l]:
                    r += 1
                else:
                    if r - l <= pat_len and pat[r - l] != '$':
                        hm += 1
                        if hm <= hm_dist:
                            r += 1
                        else:
                            break
                    else:
                        break
            if hm <= hm_dist:
                z_array[k] = r - l - hm
            else:
                z_array[k] = r - l
            r -= 1
        else:
            if z_array[k - l] < r + 1 - k:
                z_array[k] = z_array[k - l]
            else:
                l = k
                while r < len(pat):
                    if pat[r] == pat[r - l]:
                        r += 1
                    else:
                        if r - l <= pat_len and pat[r - l] != '$':
                            hm += 1
                            if hm <= hm_dist:
                                r += 1
                            else:
                                break
                        else:
                            break

                if hm <= hm_dist:
                    z_array[k] = r - l - hm
                else:
                    z_array[k] = r - l
                r -= 1

    return z_array


def z_search(txt, pat, ham_dist):
    res_pos = []
    txt_concat = pat + '$' + txt
    z_arr = get_z_array(txt_concat, len(pat), ham_dist)
    for i in range(len(txt_concat)):
        if z_arr[i] == len(pat):
            res_pos.append(i - len(pat))
        elif z_arr[i] == len(pat) - ham_dist:
            res_pos.append(i - len(pat))

    return res_pos
